<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<beans:import resource="root-context.xml"/>

	<!-- enable Method level [vs URL level] authorization  This work for ROOT WEB APPLICATION Level scanned components
      Does NOT recognize WEB Application level components - for THAT  need to place enable line in Dispatcher-servlet-->
	<global-method-security pre-post-annotations="enabled" />
	
	<!-- security:http enables security filter mechanism...name space configuration is activated -->
	<!-- use-expressions enables URL level authorization - allows SPEL syntax-->
	<http>
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/login*" access="permitAll"/>
		<intercept-url pattern="/logout" access="permitAll"/>
		<intercept-url pattern="/profile/addProfile" access="permitAll"/>
		<intercept-url pattern="/resources/**" access="permitAll"/>
		<intercept-url pattern="/**" access="isAuthenticated()" />
		
		<form-login
			login-page="/login"
			default-target-url="/dashboard"
			authentication-failure-url="/login?error" 
			always-use-default-target="false"
			username-parameter="username"
			password-parameter="password" />
			
		<logout
			logout-url="/logout"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="JSESSIONID"/>

		<csrf disabled="true"/>
	</http>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="SELECT username, password, enabled FROM Credentials WHERE username=?"
				authorities-by-username-query="SELECT u1.username, u2.authority FROM Credentials u1, Authority u2 WHERE u1.id = u2.user_id AND u1.username =?" />
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
	</beans:bean>
	
</beans:beans>
